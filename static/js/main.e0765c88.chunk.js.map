{"version":3,"sources":["assets/noPoster.png","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","tvApi","get","term","query","encodeURIComponent","id","append_to_response","moviesApi","Container","styled","div","Title","span","Grid","Section","title","children","Text","props","color","Message","text","Image","bgUrl","parseInt","rating","Rating","ImageContainer","Year","Poster","imageUrl","year","isMovie","to","require","default","role","aria-label","length","substr","prototype","PropTypes","number","isRequired","string","bool","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","original_title","poster_path","vote_average","release_date","HomeContainer","state","data","results","this","setState","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","show","original_name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","a","TVPresenter","topRated","airingToday","TVContainer","Backdrop","bgImage","Content","Cover","Data","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","pathname","location","includes","match","push","history","parsedId","isNaN","Header","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0765c88.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPoster.360e032c.png\";","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"6e052b14817c69d4caf736bb7acfe737\",\n    language: \"en-US\",\n  },\n});\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  search: (term) =>\n    api.get(\"search/tv\", { params: { query: encodeURIComponent(term) } }),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n};\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  search: (term) =>\n    api.get(\"search/movie\", { params: { query: encodeURIComponent(term) } }),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin: 25px 0px;\n`;\nconst Title = styled.span`\n  font-size: 20px;\n  font-weight: 600;\n`;\nconst Grid = styled.div`\n  margin-top: 20px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","/* eslint-disable import/no-anonymous-default-export */\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nexport default () => <Container>Loading..</Container>;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n  font-weight: 600;\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  background-color: rgba(255, 255, 255, 0.1);\n  height: 180px;\n  background-size: cover;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n  border: ${(props) =>\n    parseInt(props.rating) >= 9\n      ? `3px solid gold`\n      : parseInt(props.rating) >= 8\n      ? `3px solid silver`\n      : `none`};\n`;\n\nconst Rating = styled.span`\n  font-size: 10px;\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 7px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 2px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ imageUrl, title, rating, year, id, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPoster.png\").default\n          }\n          rating={rating}\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>{title.length > 17 ? `${title.substr(0, 17)}...` : title}</Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.prototype = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substr(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substr(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substr(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"yellow\" text={error} />}\n      </Container>\n    )}\n  </>\n);\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","/* eslint-disable import/no-anonymous-default-export */\nimport React from \"react\";\nimport { moviesApi } from \"../../api\";\nimport HomePresenter from \"./HomePresenter\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({ nowPlaying, upcoming, popular });\n    } catch {\n      this.setState({ error: \"Can't find movies information\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n  position: fixed;\n  left: 260px;\n  top: 8px;\n  z-index: 12;\n  width: 25%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 20px;\n  padding: 2px;\n  width: 100%;\n  height: 30px;\n  border-bottom: 1px solid grey;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  loading,\n  error,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV shows\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substr(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date && show.first_air_date.substr(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"yellow\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Oops! We don't have it :(\" color=\"green\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","/* eslint-disable import/no-anonymous-default-export */\nimport React from \"react\";\nimport { moviesApi, tvApi } from \"../../api\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({ error: \"Can't find results\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date && show.first_air_date.substr(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date && show.first_air_date.substr(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date && show.first_air_date.substr(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"yellow\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","/* eslint-disable import/no-anonymous-default-export */\nimport React from \"react\";\nimport { tvApi } from \"../../api\";\nimport TVPresenter from \"./TVPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      this.setState({ topRated, airingToday, popular });\n    } catch {\n      this.setState({ error: \"Can't find TV information\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 30px;\n  box-shadow: 5px 5px 8px 0px rgba(255, 255, 255, 0.3);\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 30px;\n`;\n\nconst Title = styled.span`\n  font-size: 50px;\n  font-weight: 600px;\n`;\n\nconst ItemContainer = styled.div`\n  display: flex;\n  margin: 20px 0px;\n  align-items: center;\n  width: 500px;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  font-size: 8px;\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 16px;\n  opacity: 0.7;\n  line-height: 2;\n  width: 70%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPoster.png\").default\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date\n                : result.first_air_date}\n            </Item>\n            <Divider>♦️</Divider>\n            <Item>\n              {result.runtime\n                ? `${result.runtime} minutes`\n                : result.episode_run_time\n                ? `${result.episode_run_time} minutes`\n                : \"No Runtime Information\"}\n            </Item>\n            <Divider>♦️</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <hr></hr>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","/* eslint-disable import/no-anonymous-default-export */\nimport React from \"react\";\nimport { moviesApi, tvApi } from \"../../api\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/TV\"}>\n        <SLink to=\"/TV\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","/* eslint-disable import/no-anonymous-default-export */\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"../Routes/Home\";\nimport Search from \"../Routes/Search\";\nimport TV from \"../Routes/TV\";\nimport Detail from \"../Routes/Detail\";\nimport Header from \"./Header\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/TV\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body{\n        font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:14px;\n        background-color:rgba(20,20,20,1);\n        color:white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./api\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}